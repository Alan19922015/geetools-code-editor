/***
 * Tests for cloud mask functions
 * 
 * Author: Rodrigo E. Principe
 * email: fitoprincipe82@gmail.com
 * License: MIT
 */
 
 var s2mask = require('users/fitoprincipe/geetools:cloud_masks').sentinel2
 var landsatSR = require('users/fitoprincipe/geetools:cloud_masks').landsatSR
 var cloud = require('users/fitoprincipe/geetools:cloud_masks')
 
 var show = function(colid, cloud_prop, viz, name, func, params, cloud_percent) {
   var percent = cloud_percent || 40;
   var cent = Map.getCenter();
   var col = ee.ImageCollection(colid)
             .filterBounds(cent)
             .filterMetadata(cloud_prop, 'greater_than', percent)
             //.filterDate('2017-01-01', '2017-03-01')
             .sort(cloud_prop);
   
   if (col.size().getInfo() !== 0) {
     var img = ee.Image(col.first());
     //var vis = {bands:['B8', 'B12', 'B4'], min:0, max:5000}
     if (params) {
      var masked = func(params)(img);
     } else {
      var masked = funct(img);
     }
     Map.addLayer(masked, viz, name+' masked');
     Map.addLayer(img, viz, name+' NOT masked', false);
     Map.centerObject(img)
   }
   else {
     print('Collection is empty')
   }
 }
 
 
 var sentinel2 = function() {
   var cent = Map.getCenter();
   var col = ee.ImageCollection('COPERNICUS/S2')
             .filterBounds(cent)
             .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'greater_than', 40)
             //.filterDate('2017-01-01', '2017-03-01')
             .sort('CLOUDY_PIXEL_PERCENTAGE');
   
   if (col.size().getInfo() !== 0) {
     var img = ee.Image(col.first());
     var vis = {bands:['B8', 'B12', 'B4'], min:0, max:5000}
     var masked = s2mask(img);
     Map.addLayer(masked, vis, 'Sentinel 2 masked');
     Map.addLayer(img, vis, 'Sentinel 2 NOT masked', false);
     Map.centerObject(img)
   }
   else {
     print('Collection is empty')
   }
 };
 
 
 var landsat8SR = function(options, name) {
   var n = name || 'Landsat 8 SR'
   var cent = Map.getCenter();
   var col = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
             .filterBounds(cent)
             .filterMetadata('CLOUD_COVER', 'greater_than', 40)
             .sort('CLOUD_COVER');
   
   if (col.size().getInfo() !== 0) {
     var img = ee.Image(col.first());
     var vis = {bands:['B5', 'B7', 'B4'], min:0, max:5000}
     var masked = landsatSR(options)(img);
     Map.addLayer(masked, vis, n+' masked');
     Map.addLayer(img, vis, n+' NOT masked', false);
     Map.centerObject(img)
   }
   else {
     print('Collection is empty')
   }
 };
 
 var landsat5SR = function(options, name) {
   var n = name || 'Landsat 5 SR'
   var cent = Map.getCenter();
   var col = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
             .filterBounds(cent)
             .filterMetadata('CLOUD_COVER', 'greater_than', 40)
             .sort('CLOUD_COVER');
   if (col.size().getInfo() !== 0) {
     var img = ee.Image(col.first());
     var vis = {bands:['B4', 'B5', 'B3'], min:0, max:5000}
     var masked = landsatSR(options)(img);
     Map.addLayer(masked, vis, n+' masked');
     Map.addLayer(img, vis, n+' NOT masked', false);
     Map.centerObject(img)
   }
   else {
     print('Collection is empty')
   }
 };
 
 var landsat7SR = function(options, name) {
   var n = name || 'Landsat 7 SR'
   var cent = Map.getCenter();
   var col = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR')
             .filterBounds(cent)
             .filterMetadata('CLOUD_COVER', 'greater_than', 40)
             .sort('CLOUD_COVER');
   
   if (col.size().getInfo() !== 0) {
     var img = ee.Image(col.first());
     var vis = {bands:['B4', 'B5', 'B3'], min:0, max:5000}
     var masked = landsatSR(options)(img);
     Map.addLayer(masked, vis, n+' masked');
     Map.addLayer(img, vis, n+' NOT masked', false);
     Map.centerObject(img)
   }
   else {
     print('Collection is empty')
   }
 };
 
 var landsat4SR = function(options, name) {
   print('WTF')
   var n = name || 'Landsat 4 SR'
   var cent = Map.getCenter();
   var col = ee.ImageCollection('LANDSAT/LT04/C01/T1_SR')
             .filterBounds(cent)
             .filterMetadata('CLOUD_COVER', 'greater_than', 40)
             .sort('CLOUD_COVER');
   
   if (col.size().getInfo() !== 0) {
   
     var img = ee.Image(col.first());
     var vis = {bands:['B4', 'B5', 'B3'], min:0, max:5000}
     var masked = landsatSR(options)(img);
     Map.addLayer(masked, vis, n+' masked');
     Map.addLayer(img, vis, n+' NOT masked', false);
     Map.centerObject(img)
     }
   else {
     print('Collection is empty')
   }
 };
 
 var landsat4TOA = function(options, name) {
   show('LANDSAT/LT04/C01/T1_TOA', 
        'CLOUD_COVER',
        {},
        'landsat 4 TOA',
        cloud.make('landsatTOA'),
        ())
 }
 
 print('imported')
 
 exports.sentinel2 = sentinel2
 exports.landsat8SR = landsat8SR
 exports.landsat5SR = landsat5SR
 exports.landsat4SR = landsat4SR
 exports.landsat7SR = landsat7SR
 exports.landsat4TOA = landsat4TOA