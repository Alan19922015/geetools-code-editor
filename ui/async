/**
 * Async Widgets
 * Author: Rodrigo E. Principe
 * email: fitoprincipe82@gmail.com
 * license: MIT
 **/
 
var asyncSelect = function(options) {
  
  this.loading = 'Loading...'
  
  this.options = options
  
  this.items = this.formatItems(options.items)
  
  this.placeholder = options.placeholder
  this.value = options.value
  this.onChange = options.onChange
  this.disabled = options.disabled
  this.style = options.style
  
  this.sel = ui.Select({
    items: [],
    placeholder: this.loading,
    value: null,
    onChange: this.onChange,
    disabled: this.disabled,
    style: this.style
  })
  
  try {
    this.setItems(this.items)
  } catch (e) {
    this.sel.items().reset(options.items)
    this.sel.setPlaceholder('Select a value')
  }
}

asyncSelect.prototype.formatItems = function(items) {
  try {
    return items.map(function(it){return ee.Algorithms.String(it)})
  }
  catch(e){
    return this.options.items
  }
}

asyncSelect.prototype.setItems = function(items) {
  items = this.formatItems(items)
  this.sel.setPlaceholder(this.loading)
  items.evaluate(this.evaluation())
}

asyncSelect.prototype.evaluation = function() {
  var self = this
  var wrap = function(items, error) {
    if (error === undefined) {
      self.sel.items().reset(items)
      self.sel.setPlaceholder('Select a value')
      if (self.options.value) {
        self.sel.setValue(self.options.value)
      }
    } else {
      self.sel.setPlaceholder('Error')
      print(error)
    }
  }
  return wrap
}

asyncSelect.prototype.build = function() {
  return this.sel
}

exports.asyncSelect = asyncSelect

var test = function() {
  var image = ee.Image('COPERNICUS/S2_SR/20170328T083601_20170328T084228_T35RNK')
  
  var list = image.reduceRegion({
    reducer: 'mean',
    geometry: image.geometry().centroid().buffer(10000),
    scale: 100
  }).values().map(function(item){return ee.Number(item).toInt()})
  
  // UPPER LIMIT
  var select = new asyncSelect({
    items: list,
    value: "5412"
  })
  Map.add(select.build())
  
  //select.setItems(list)
}

//test()