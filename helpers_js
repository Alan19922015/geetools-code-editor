/**
 * JavaScript Helpers
 * 
 * Author: Rodrigo E. Principe
 * email: fitoprincipe82@gmail.com
 * license: MIT
 **/

var PixelSize = function(number) {
  if (object.is(number, 'Number')) {
    this.number = Number(number)
  } else {
    this.number = Number(number.replace('px', ''))
  }
  
  this.value = function() {
    return this.number.toString()+'px'
  }
  
  this.add = function(another) {
    var other = another.number || another
    return new PixelSize(this.number + other)
  }
  
  this.multiply = function(another) {
    var other = another.number || another
    return new PixelSize(this.number * other)
  }
  
  this.divide = function(another) {
    var other = another.number || another
    return new PixelSize(this.number / other)
  }
  
  this.subtract = function(another) {
    var other = another.number || another
    return new PixelSize(this.number - other)
  }
}
exports.PixelSize = PixelSize

// UUID4
// from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript#answer-21963136
var uuid4 = function() {
    var lut = []; for (var i=0; i<256; i++) { lut[i] = (i<16?'0':'')+(i).toString(16); }
    var d0 = Math.random()*0x100000000|0;
    var d1 = Math.random()*0x100000000|0;
    var d2 = Math.random()*0x100000000|0;
    var d3 = Math.random()*0x100000000|0;
    return lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+'-'+
      lut[d1&0xff]+lut[d1>>8&0xff]+'-'+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+'-'+
      lut[d2&0x3f|0x80]+lut[d2>>8&0xff]+'-'+lut[d2>>16&0xff]+lut[d2>>24&0xff]+
      lut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];
  }
exports.uuid4 = uuid4

// Objects
var object = {}

object.is = function (obj, type) {
    var clas = Object.prototype.toString.call(obj).slice(8, -1);
    return obj !== undefined && obj !== null && clas === type;
}

object.keys = function(obj) {
  var k = []
  for (var key in obj) {
    k.push(key)
  }
  return k
}

object.values = function(obj) {
  var v = []
  for (var key in obj) {
    var value = obj[key]
    v.push(value)
  }
  return v
}

exports.object = object

// Arrays
var array = {}

array.insert = function(array, index, element) {
  var firstPart = array.slice(0, index)
  var lastPart = array.slice(index, array.length)
  
  firstPart.push(element)
  for (var i in lastPart) {
    var rest = lastPart[i]
    firstPart.push(rest)
  }
  return firstPart
}

exports.array = array