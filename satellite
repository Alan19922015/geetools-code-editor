/*
 * Author: Rodrigo E. Principe
 * License: Apache 2.0
 * email: fitoprincipe82@gmail.com

Easy way to access common satellites (Landsat, Sentinel, MODIS) information
*/

var Landsat = function(number, process, sensor, tier) {
  this.number = number;
  this.process = process;
  this.sensor = sensor;
  
  if (tier === undefined || tier === null) {
    this.tier = 1;
  } else {
    this.tier = tier;
  }
  
  // SENSOR
  switch (number) {
    case 4: case 5:
      if (sensor === undefined || sensor === null) {
        this.sensor = 'TM'
      }
      break
    case 7:
      this.sensor = 'ETM'
      break
    case 8:
      this.sensor = 'OLI'
      break
  }
  
  // IF SENSOR IS NOT AVAILABLE
  switch (number) {
    case 4: case 5:
      if ((this.process === 'SR' || this.process === 'TOA') 
          && this.sensor !== 'TM') {
        print('Lansat '+this.number+' '+this.process+' has no sensor '+this.sensor)
        print('Switching to TM..')
        this.sensor = 'TM'
      } 
      else if (this.sensor !== 'TM' && this.sensor !== 'MSS') {
        print('Lansat '+this.number+' has no sensor '+this.sensor)
        print('Switching to TM..')
        this.sensor = 'TM'
      }
      break
    case 7:
      if (this.sensor !== 'ETM') {
        print('Lansat 7 has no sensor '+this.sensor)
        print('Switching to ETM..')
        this.sensor = 'ETM'
      }
      break
    case 8:
      if (this.sensor !== 'OLI') {
        print('Lansat 8 has no sensor '+this.sensor)
        print('Switching to OLI..')
        this.sensor = 'OLI'
      }
      break
  }
  
  // ID CONSTRUCTOR
  var NUMBER = {
    4: {'TM':'LT04', 'MSS':'LM04'}, 
    5: {'TM':'LT05', 'MSS':'LM05'}, 
    7: {'ETM':'LE07'}, 
    8: {'OLI':'LC08'}
  }
  var TIER = {1: 'T1', 2: 'T2'}
  var PROCESS = {'RAW': '', 'SR': '_SR', 'TOA': '_TOA'}
  
  this.id = 'LANDSAT/'+NUMBER[this.number][this.sensor]
                      +'/C01/'+TIER[this.tier]
                      +PROCESS[this.process]
                      
  this.collection = ee.ImageCollection(this.id)
  
  // BANDS by NUMBER
  switch (this.number) {
    case 4: case 5: case 7:
      // by SENSOR
      switch (this.sensor) {
        case 'TM': case 'ETM':
          this.bands = {
            'blue':'B1', 'green':'B2', 'red':'B3', 'nir':'B4', 
            'swir':'B5', 'swir2': 'B7'
          }
          break
        case 'MSS':
          this.bands = {
            'green': 'B1', 'red': 'B2', 'nir': 'B3', 'nir2': 'B4'
          }
          break
      }
      break
    case 8:
      this.bands = {
        'ublue': 'B1', 'blue': 'B2', 'green': 'B3', 'red': 'B4',
        'nir':'B5', 'swir':'B6', 'swir2':'B7'
      }
      break
  }
  
  // BANDS by PROCESS
  switch (this.process) {
    case 'SR':
      this.bands.pixel_qa = 'pixel_qa'
      this.bands.radsat_qa = 'radsat_qa'
      switch (this.number) {
        case 4: case 5: case 7:
          this.bands.atmos_opacity = 'sr_atmos_opacity'
          this.bands.cloud_qa = 'sr_cloud_qa'
          this.bands.thermal = 'B6'
          break
        case 8:
          this.bands.aerosol = 'sr_aerosol'
          break
      }
      break
    case 'TOA': case 'RAW':
      this.bands.bqa = 'BQA'
      switch (this.number) {
        case 4: case 5:
          switch (this.sensor) {
            case 'TM':
              this.bands.thermal = 'B6'
              break
          }
          break
        case 7: case 8:
          this.bands.pan = 'B8'
          break
      }
      switch (this.number) {
        case 7:
          this.bands.thermal1 = 'B6_VCID_1'
          this.bands.thermal2 = 'B6_VCID_2'
          break
        case 8:
          this.bands.cirrus = 'B9'
          this.bands.thermal = 'B10'
          this.bands.thermal2 = 'B11'
          break
      }
      break
  }
}

var sats = [4,5,7,8]
var process = ['RAW', 'TOA', 'SR']
var sensors = ['TM', 'MSS', 'ETM', 'OLI']
var tiers = [1, 2]

for (var s in sats) {
  var sat = sats[s]
  for (var p in process) {
    var proc = process[p]
    for (var se in sensors) {
      var sen = sensors[se]
      for (var t in tiers) {
        var tie = tiers[t]
        //
        var satellite = new Landsat(sat, proc, sen, tie)
        print(satellite.id)
        print(satellite.collection.limit(1))
      }
    }
  }
}


var BANDS = {
  'Landsat 8': {
    'blue': 'B2',
    'green': 'B3',
    'red': 'B4',
    'nir': 'B5',
    'swir1': 'B6',
    'swir2': 'B7',
    'pan': 'B8',
    'cirrus': 'B9',
    'thermal1': 'B10',
    'thermal2': 'B11'
  }
}

var FAMILY = {
  'Landsat 8': ['Landsat 8 SR', 'Landsat 8 TOA', 'Landsat 8 RAW']
}

var GROUPS = {
  'Landsat 8 SR': ['LANDSAT/LC08/C01/T1_SR', 'LANDSAT/LC08/C01/T2_SR'],
  'Landsat 7 SR': ['LANDSAT/LE07/C01/T1_SR', 'LANDSAT/LE07/C01/T2_SR'],
  'Landsat 5 SR': ['LANDSAT/LT05/C01/T1_SR', 'LANDSAT/LT05/C01/T2_SR'],
  'Landsat 8 TOA': ['LANDSAT/LC08/C01/T1_TOA', 'LANDSAT/LC08/C01/T2_TOA'],
  'Landsat 7 TOA': ['LANDSAT/LE07/C01/T1_TOA', 'LANDSAT/LE07/C01/T2_TOA'],
  'Landsat 5 TOA': ['LANDSAT/LT05/C01/T1_TOA', 'LANDSAT/LT05/C01/T2_TOA'],
}

var INFORMATION = {
  'LANDSAT/LC08/C01/T1_SR': {
    'group': 'Landsat 8 SR',
    'family': 'Landsat 8',
  }
}

var Satellite = function(id) {
  this.collection = ee.ImageCollection(id);
  this.group = INFORMATION[id]['group'];
  this.family = INFORMATION[id]['family'];
  
  switch (id) {
    case 'LANDSAT/LC08/C01/T1_SR':
      var common = BANDS[this.family]
  }
}