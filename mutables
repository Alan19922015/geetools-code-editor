/****************
 * Mutable Objects
 * (despite https://groups.google.com/d/msg/google-earth-engine-developers/ZWxQsCiJhQY/x4b-7vKYAwAJ)
 * 
 * Author: Rodrigo E. Principe
 * email: fitoprincipe82@gmail.com
 * licence: MIT
 ****************/

var Feature = function(feature) {
  this.feature = feature
  this.set = function(key, value) {
    this.feature = this.feature.set(key, value)
  }
  this.get = function(property) {
    return this.feature.get(property)
  }
  this.id = this.feature.id()
}
exports.Feature = Feature

var FeatureCollection = function(collection) {
  this.collection = collection
  
  this.set = function(feature, property, value) {
    var fid = feature.id()
    var newft = this.collection.map(function(feat) {
      feat = ee.Feature(feat)
      var featid = feat.id()
      var cond = fid.compareTo(featid).eq(0)
      return ee.Feature(ee.Algorithms.If(cond, 
      feat.set(property, value), feat))
    })
    this.collection = newft
  }
}

/*
var FeatureCollection = function(collection) {
  this.originalCollection = collection
  this.size = this.originalCollection.size().getInfo()
  
  this.set = function(feature, key, value) {
    var id = feature.id().getInfo()
    for (var i in this.listCollection) {
      var mutable = this.listCollection[i]
      var mutid = mutable.id
      if (mutid === id) {
        mutable.set(key, value)
      }
    }
  }
  
  this.init = function() {
    var output = []
    var flist = this.originalCollection.toList(this.size)
    for (var i=0; i<this.size; i++) {
      var feat = ee.Feature(flist.get(i))
      var mut = new Feature(feat)
      output.push(mut)
    }
    return output
  }
  
  this.listCollection = this.init()
  
  this.featureCollection = function() {
    var mutablelist = this.listCollection
    var featlist = []
    for (var mut in mutablelist) {
      var mutable = mutablelist[mut]
      featlist.push(mutable.feature)
    }
    return ee.FeatureCollection(featlist)
  }
}*/
exports.FeatureCollection = FeatureCollection